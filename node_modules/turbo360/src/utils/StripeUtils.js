var Promise = require('bluebird')

var StripeUtils = function(){
	var createStripeAccount = function(config){ // requires stripeRef, client, stripeToken values
	    return new Promise(function (resolve, reject){
	    	if (config.stripeRef == null){
		        reject(new Error('Missing stripeRef'))
	    		return
	    	}
	    	if (config.client == null){
		        reject(new Error('Missing Client Parameter'))
	    		return
	    	}
	    	if (config.stripeToken == null){
		        reject(new Error('Missing StripeToken Parameter'))
	    		return
	    	}

			config.stripeRef.customers.create({
				description: config.client._id.toString(),
				source: config.stripeToken
			}, function(err, customer) {
				if (err){
					reject(err)
					return
				}
				
				var card = customer.sources.data[0]
				config.client['stripeId'] = customer.id
				config.client['creditCard'] = {
					id: customer.id,
					lastFour: card.last4,
					exp_month: card.exp_month,
					exp_year: card.exp_year,
					brand: card.brand
				}

				resolve(config.client)
				return
			})
	    })
	}

//	var createNonregisteredStripeCharge = function(stripeToken, amount, description){
	var createStripeCharge = function(config){
	    return new Promise(function (resolve, reject){
	    	if (config.stripeRef == null){
		        reject(new Error('Missing stripeRef'))
	    		return
	    	}
	    	if (config.amount == null){
		        reject(new Error('Missing Amount Parameter'))
	    		return
	    	}
	    	if (config.stripeToken == null){
		        reject(new Error('Missing StripeToken Parameter'))
	    		return
	    	}
	    	if (config.description == null){
		        reject(new Error('Missing Description Parameter'))
	    		return
	    	}

			config.stripeRef.charges.create({
				amount: config.amount*100, // amount in cents
				currency: 'usd',
				source: config.stripeToken,
				description: config.description,
			}, function(err, charge) {
				if (err){
		            reject(err)
		            return
				}

		    	resolve(charge)
			})
	    })
	}

	var recurringCharge = function(config){
	    return new Promise(function (resolve, reject){
	    	if (config.stripeRef == null){
		        reject(new Error('Missing stripeRef'))
	    		return
	    	}

	    	if (config.amount == null){
		        reject(new Error('Missing amount parameter'))
	    		return
	    	}

	    	if (config.customerId == null){
		        reject(new Error('Missing customerId parameter'))
	    		return
	    	}

	    	if (config.description == null){
		        reject(new Error('Missing description parameter'))
	    		return
	    	}

			config.stripeRef.charges.create({
				amount: config.amount*100, // convert amount to cents
				currency: 'usd',
				customer: config.customerId,
				description: config.description,
			}, function(err, charge) {
				if (err){ // check for `err`
		            reject(err)
		            return
				}

		    	resolve(charge)
			})
	    })
	}


	var instance = {
		createStripeAccount: createStripeAccount,
		createStripeCharge: createStripeCharge,
		recurringCharge: recurringCharge
	}

	return instance
}

module.exports = StripeUtils